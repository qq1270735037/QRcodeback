<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.code.qrcodeback.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.code.qrcodeback.entity.User">
        <!--@Table user-->
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userPassword" column="user_password" jdbcType="VARCHAR"/>
        <result property="codeId" column="code_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userGender" column="user_gender" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="INTEGER"/>
        <result property="userImage" column="user_image" jdbcType="VARCHAR"/>
        <result property="userNumber" column="user_number" jdbcType="INTEGER"/>
        <result property="userDate" column="user_date" jdbcType="TIMESTAMP"/>
        <result property="userState" column="user_state" jdbcType="INTEGER"/>
        <result property="userIdcard" column="user_idcard" jdbcType="VARCHAR"/>
        <result property="userLocation" column="user_location" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          user_id, user_password, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location
        from user
        where user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryByPage" resultMap="BaseResultMap">
        select
          user_id, user_password, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location
        from user

        limit #{Page}, #{Limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          user_id, user_password, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location
        from access.user
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user

    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into user(user_id,user_password, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location)
        values (#{userId},#{userPassword}, #{codeId}, #{userName}, #{userGender}, #{userType}, #{userImage}, #{userNumber}, #{userDate}, #{userState}, #{userIdcard}, #{userLocation})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into user(user_password, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userPassword}, #{entity.codeId}, #{entity.userName}, #{entity.userGender}, #{entity.userType}, #{entity.userImage}, #{entity.userNumber}, #{entity.userDate}, #{entity.userState}, #{entity.userIdcard}, #{entity.userLocation})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into user(user_password, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userPassword}, #{entity.codeId}, #{entity.userName}, #{entity.userGender}, #{entity.userType}, #{entity.userImage}, #{entity.userNumber}, #{entity.userDate}, #{entity.userState}, #{entity.userIdcard}, #{entity.userLocation})
        </foreach>
        on duplicate key update
        user_password = values(user_password),
        code_id = values(code_id),
        user_name = values(user_name),
        user_gender = values(user_gender),
        user_type = values(user_type),
        user_image = values(user_image),
        user_number = values(user_number),
        user_date = values(user_date),
        user_state = values(user_state),
        user_idcard = values(user_idcard),
        user_location = values(user_location)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
            <if test="codeId != null">
                code_id = #{codeId},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userGender != null and userGender != ''">
                user_gender = #{userGender},
            </if>
            <if test="userType != null">
                user_type = #{userType},
            </if>
            <if test="userImage != null and userImage != ''">
                user_image = #{userImage},
            </if>
            <if test="userNumber != null">
                user_number = #{userNumber},
            </if>
            <if test="userDate != null">
                user_date = #{userDate},
            </if>
            <if test="userState != null">
                user_state = #{userState},
            </if>
            <if test="userIdcard != null">
                user_idcard = #{userIdcard},
            </if>
            <if test="userLocation != null">
                user_location = #{userLocation},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where user_id = #{userId}
    </delete>
    <select id="searchById" resultMap="BaseResultMap">
        select
            user_id, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location
        from access.user
        where user_id=#{userId}
<!--        where user_id like concat('%',#{userId},'%')-->
    </select>
    <select id="searchByName" resultMap="BaseResultMap">
        select
        user_id, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location
        from access.user
        where user_name like concat('%',#{userName},'%')
        <!--        where user_id like concat('%',#{userId},'%')-->
    </select>

    <select id="searchByIdCard" resultMap="BaseResultMap">
        select
        user_id, code_id, user_name, user_gender, user_type, user_image, user_number, user_date, user_state, user_idcard, user_location
        from access.user
        where user_idcard like concat('%',#{userIdcard},'%')
        <!--        where user_id like concat('%',#{userId},'%')-->
    </select>
</mapper>

