<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.code.qrcodeback.dao.TypeDao">

    <resultMap id="BaseResultMap" type="com.code.qrcodeback.entity.Type">
        <!--@Table type-->
        <result property="typeId" column="type_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="typeName" column="type_name" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          type_id, user_id, type_name, user_type
        from type
        where type_id = #{typeId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          type_id, user_id, type_name, user_type
        from type
        <where>
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="typeName != null and typeName != ''">
                and type_name = #{typeName}
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          type_id, user_id, type_name, user_type
        from access.type
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from type
        <where>
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="typeName != null and typeName != ''">
                and type_name = #{typeName}
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="typeId" useGeneratedKeys="true">
        insert into type(user_id, type_name, user_type)
        values (#{userId}, #{typeName}, #{userType})
    </insert>

    <insert id="insertBatch" keyProperty="typeId" useGeneratedKeys="true">
        insert into type(user_id, type_name, user_type)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userId}, #{entity.typeName}, #{entity.userType})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="typeId" useGeneratedKeys="true">
        insert into type(user_id, type_name, user_type)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.typeName}, #{entity.userType})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        type_name = values(type_name),
        user_type = values(user_type)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update type
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="typeName != null and typeName != ''">
                type_name = #{typeName},
            </if>
            <if test="userType != null">
                user_type = #{userType},
            </if>
        </set>
        where type_id = #{typeId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from type where type_id = #{typeId}
    </delete>

</mapper>

